// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="intersect,hls_ip_2015_4,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a35ticsg325-1l,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.073000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=28,HLS_SYN_FF=1263,HLS_SYN_LUT=1783}" *)

module intersect (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sphere_center_x,
        sphere_center_y,
        sphere_center_z,
        sphere_radius,
        sphere_radius2,
        sphere_surfaceColor_r,
        sphere_surfaceColor_g,
        sphere_surfaceColor_b,
        sphere_emissionColor_r,
        sphere_emissionColor_g,
        sphere_emissionColor_b,
        sphere_reflection,
        rayorig_x,
        rayorig_y,
        rayorig_z,
        raydir_x,
        raydir_y,
        raydir_z,
        t0,
        t0_ap_vld,
        t1,
        t1_ap_vld,
        square_root,
        ap_return
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 16'b1;
parameter    ap_ST_st2_fsm_1 = 16'b10;
parameter    ap_ST_st3_fsm_2 = 16'b100;
parameter    ap_ST_st4_fsm_3 = 16'b1000;
parameter    ap_ST_st5_fsm_4 = 16'b10000;
parameter    ap_ST_st6_fsm_5 = 16'b100000;
parameter    ap_ST_st7_fsm_6 = 16'b1000000;
parameter    ap_ST_st8_fsm_7 = 16'b10000000;
parameter    ap_ST_st9_fsm_8 = 16'b100000000;
parameter    ap_ST_st10_fsm_9 = 16'b1000000000;
parameter    ap_ST_st11_fsm_10 = 16'b10000000000;
parameter    ap_ST_st12_fsm_11 = 16'b100000000000;
parameter    ap_ST_st13_fsm_12 = 16'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 16'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 16'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 16'b1000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_2F = 32'b101111;
parameter    ap_const_lv32_3F = 32'b111111;
parameter    ap_const_lv32_3D = 32'b111101;
parameter    ap_const_lv16_0 = 16'b0000000000000000;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] sphere_center_x;
input  [31:0] sphere_center_y;
input  [31:0] sphere_center_z;
input  [31:0] sphere_radius;
input  [31:0] sphere_radius2;
input  [31:0] sphere_surfaceColor_r;
input  [31:0] sphere_surfaceColor_g;
input  [31:0] sphere_surfaceColor_b;
input  [31:0] sphere_emissionColor_r;
input  [31:0] sphere_emissionColor_g;
input  [31:0] sphere_emissionColor_b;
input  [31:0] sphere_reflection;
input  [31:0] rayorig_x;
input  [31:0] rayorig_y;
input  [31:0] rayorig_z;
input  [31:0] raydir_x;
input  [31:0] raydir_y;
input  [31:0] raydir_z;
output  [31:0] t0;
output   t0_ap_vld;
output  [31:0] t1;
output   t1_ap_vld;
input  [31:0] square_root;
output  [7:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg t0_ap_vld;
reg t1_ap_vld;
(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm = 16'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_32;
wire   [31:0] v_x_2_fu_196_p2;
reg  signed [31:0] v_x_2_reg_412;
wire   [31:0] v_y_2_fu_202_p2;
reg  signed [31:0] v_y_2_reg_418;
wire   [31:0] v_z_2_fu_208_p2;
reg  signed [31:0] v_z_2_reg_424;
wire   [47:0] grp_fu_221_p2;
reg   [47:0] tmp_23_i_reg_460;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_98;
wire   [47:0] grp_fu_234_p2;
reg   [47:0] tmp_26_i_reg_465;
wire   [47:0] grp_fu_247_p2;
reg   [47:0] tmp_29_i_reg_470;
wire  signed [63:0] tmp_i_fu_253_p1;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_bdd_111;
wire  signed [63:0] tmp_24_i_fu_256_p1;
wire  signed [63:0] tmp_27_i_fu_259_p1;
reg   [31:0] tca_reg_493;
wire   [0:0] tmp_5_fu_281_p3;
reg   [0:0] tmp_5_reg_500;
wire   [61:0] tmp_5_cast_fu_307_p1;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_bdd_128;
wire   [63:0] grp_fu_289_p2;
reg   [63:0] tmp_23_i1_reg_510;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_bdd_137;
wire   [63:0] grp_fu_295_p2;
reg   [63:0] tmp_26_i1_reg_515;
wire   [63:0] grp_fu_301_p2;
reg   [63:0] tmp_29_i1_reg_520;
reg   [47:0] tmp_3_reg_525;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_bdd_150;
reg   [45:0] tmp_7_reg_530;
wire   [0:0] tmp_s_fu_377_p2;
reg   [0:0] tmp_s_reg_535;
reg    ap_sig_cseq_ST_st15_fsm_14;
reg    ap_sig_bdd_161;
wire   [49:0] tmp_8_fu_383_p2;
reg   [49:0] tmp_8_reg_539;
wire    grp_intersect_fix64_sqrt_fu_173_ap_start;
wire    grp_intersect_fix64_sqrt_fu_173_ap_done;
wire    grp_intersect_fix64_sqrt_fu_173_ap_idle;
wire    grp_intersect_fix64_sqrt_fu_173_ap_ready;
wire   [49:0] grp_intersect_fix64_sqrt_fu_173_num;
wire   [31:0] grp_intersect_fix64_sqrt_fu_173_ap_return;
reg   [0:0] p_0_phi_fu_162_p6;
reg   [0:0] p_0_reg_158;
reg    ap_sig_cseq_ST_st16_fsm_15;
reg    ap_sig_bdd_183;
reg    grp_intersect_fix64_sqrt_fu_173_ap_start_ap_start_reg = 1'b0;
wire   [31:0] v_x_fu_178_p2;
wire   [31:0] v_y_fu_184_p2;
wire   [31:0] v_z_fu_190_p2;
wire   [47:0] tmp_fu_262_p2;
wire   [47:0] tmp_31_i_fu_266_p2;
wire  signed [31:0] grp_fu_289_p0;
wire  signed [31:0] grp_fu_289_p1;
wire  signed [31:0] grp_fu_295_p0;
wire  signed [31:0] grp_fu_295_p1;
wire  signed [31:0] grp_fu_301_p0;
wire  signed [31:0] grp_fu_301_p1;
wire   [31:0] grp_fu_310_p0;
wire   [31:0] grp_fu_310_p1;
wire   [63:0] tmp1_fu_316_p2;
wire   [63:0] tmp_31_i1_fu_320_p2;
wire   [61:0] grp_fu_310_p2;
wire  signed [48:0] tmp_4_cast_fu_345_p1;
wire   [48:0] tmp_16_cast_fu_348_p1;
wire   [48:0] d2_fu_351_p2;
wire   [47:0] tmp_9_fu_361_p3;
wire  signed [48:0] tmp_9_cast_fu_373_p1;
wire  signed [49:0] tmp_9_cast2_fu_369_p1;
wire  signed [49:0] d2_cast_fu_357_p1;
wire   [31:0] thc_fu_390_p2;
wire    grp_fu_221_ce;
wire    grp_fu_234_ce;
wire    grp_fu_247_ce;
wire    grp_fu_289_ce;
wire    grp_fu_295_ce;
wire    grp_fu_301_ce;
wire    grp_fu_310_ce;
reg   [15:0] ap_NS_fsm;


intersect_fix64_sqrt grp_intersect_fix64_sqrt_fu_173(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_intersect_fix64_sqrt_fu_173_ap_start ),
    .ap_done( grp_intersect_fix64_sqrt_fu_173_ap_done ),
    .ap_idle( grp_intersect_fix64_sqrt_fu_173_ap_idle ),
    .ap_ready( grp_intersect_fix64_sqrt_fu_173_ap_ready ),
    .num( grp_intersect_fix64_sqrt_fu_173_num ),
    .ap_return( grp_intersect_fix64_sqrt_fu_173_ap_return )
);

intersect_mul_32s_32s_48_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
intersect_mul_32s_32s_48_6_U1(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( v_x_2_reg_412 ),
    .din1( raydir_x ),
    .ce( grp_fu_221_ce ),
    .dout( grp_fu_221_p2 )
);

intersect_mul_32s_32s_48_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
intersect_mul_32s_32s_48_6_U2(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( v_y_2_reg_418 ),
    .din1( raydir_y ),
    .ce( grp_fu_234_ce ),
    .dout( grp_fu_234_p2 )
);

intersect_mul_32s_32s_48_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 48 ))
intersect_mul_32s_32s_48_6_U3(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( v_z_2_reg_424 ),
    .din1( raydir_z ),
    .ce( grp_fu_247_ce ),
    .dout( grp_fu_247_p2 )
);

intersect_mul_32s_32s_64_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
intersect_mul_32s_32s_64_6_U4(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_289_p0 ),
    .din1( grp_fu_289_p1 ),
    .ce( grp_fu_289_ce ),
    .dout( grp_fu_289_p2 )
);

intersect_mul_32s_32s_64_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
intersect_mul_32s_32s_64_6_U5(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_295_p0 ),
    .din1( grp_fu_295_p1 ),
    .ce( grp_fu_295_ce ),
    .dout( grp_fu_295_p2 )
);

intersect_mul_32s_32s_64_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
intersect_mul_32s_32s_64_6_U6(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_301_p0 ),
    .din1( grp_fu_301_p1 ),
    .ce( grp_fu_301_ce ),
    .dout( grp_fu_301_p2 )
);

intersect_mul_32ns_32ns_62_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 62 ))
intersect_mul_32ns_32ns_62_6_U7(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( grp_fu_310_p0 ),
    .din1( grp_fu_310_p1 ),
    .ce( grp_fu_310_ce ),
    .dout( grp_fu_310_p2 )
);



always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin : ap_ret_grp_intersect_fix64_sqrt_fu_173_ap_start_ap_start_reg
    if (ap_rst == 1'b1) begin
        grp_intersect_fix64_sqrt_fu_173_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14) & (tmp_s_fu_377_p2 == ap_const_lv1_0))) begin
            grp_intersect_fix64_sqrt_fu_173_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_intersect_fix64_sqrt_fu_173_ap_ready)) begin
            grp_intersect_fix64_sqrt_fu_173_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & ~(tmp_5_fu_281_p3 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14) & ~(tmp_s_fu_377_p2 == ap_const_lv1_0)))) begin
        p_0_reg_158 <= ap_const_lv1_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15) & (tmp_5_reg_500 == ap_const_lv1_0) & (tmp_s_reg_535 == ap_const_lv1_0) & ~((tmp_5_reg_500 == ap_const_lv1_0) & (tmp_s_reg_535 == ap_const_lv1_0) & (ap_const_logic_0 == grp_intersect_fix64_sqrt_fu_173_ap_done)))) begin
        p_0_reg_158 <= ap_const_lv1_1;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        tca_reg_493 <= {{tmp_31_i_fu_266_p2[ap_const_lv32_2F : ap_const_lv32_10]}};
        tmp_5_reg_500 <= tmp_31_i_fu_266_p2[ap_const_lv32_2F];
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        tmp_23_i1_reg_510 <= grp_fu_289_p2;
        tmp_26_i1_reg_515 <= grp_fu_295_p2;
        tmp_29_i1_reg_520 <= grp_fu_301_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        tmp_23_i_reg_460 <= grp_fu_221_p2;
        tmp_26_i_reg_465 <= grp_fu_234_p2;
        tmp_29_i_reg_470 <= grp_fu_247_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        tmp_3_reg_525 <= {{tmp_31_i1_fu_320_p2[ap_const_lv32_3F : ap_const_lv32_10]}};
        tmp_7_reg_530 <= {{grp_fu_310_p2[ap_const_lv32_3D : ap_const_lv32_10]}};
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14) & (tmp_s_fu_377_p2 == ap_const_lv1_0))) begin
        tmp_8_reg_539 <= tmp_8_fu_383_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        tmp_s_reg_535 <= tmp_s_fu_377_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        v_x_2_reg_412 <= v_x_2_fu_196_p2;
        v_y_2_reg_418 <= v_y_2_fu_202_p2;
        v_z_2_reg_424 <= v_z_2_fu_208_p2;
    end
end

always @ (tmp_5_reg_500 or tmp_s_reg_535 or grp_intersect_fix64_sqrt_fu_173_ap_done or ap_sig_cseq_ST_st16_fsm_15) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15) & ~((tmp_5_reg_500 == ap_const_lv1_0) & (tmp_s_reg_535 == ap_const_lv1_0) & (ap_const_logic_0 == grp_intersect_fix64_sqrt_fu_173_ap_done)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (tmp_5_reg_500 or tmp_s_reg_535 or grp_intersect_fix64_sqrt_fu_173_ap_done or ap_sig_cseq_ST_st16_fsm_15) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15) & ~((tmp_5_reg_500 == ap_const_lv1_0) & (tmp_s_reg_535 == ap_const_lv1_0) & (ap_const_logic_0 == grp_intersect_fix64_sqrt_fu_173_ap_done)))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_137) begin
    if (ap_sig_bdd_137) begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_150) begin
    if (ap_sig_bdd_150) begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_161) begin
    if (ap_sig_bdd_161) begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_183) begin
    if (ap_sig_bdd_183) begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_32) begin
    if (ap_sig_bdd_32) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_98) begin
    if (ap_sig_bdd_98) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_111) begin
    if (ap_sig_bdd_111) begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_128) begin
    if (ap_sig_bdd_128) begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    end
end

always @ (tmp_5_reg_500 or tmp_s_reg_535 or p_0_reg_158 or ap_sig_cseq_ST_st16_fsm_15) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15) & (tmp_5_reg_500 == ap_const_lv1_0) & (tmp_s_reg_535 == ap_const_lv1_0))) begin
        p_0_phi_fu_162_p6 = ap_const_lv1_1;
    end else begin
        p_0_phi_fu_162_p6 = p_0_reg_158;
    end
end

always @ (tmp_5_reg_500 or tmp_s_reg_535 or grp_intersect_fix64_sqrt_fu_173_ap_done or ap_sig_cseq_ST_st16_fsm_15) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15) & (tmp_5_reg_500 == ap_const_lv1_0) & (tmp_s_reg_535 == ap_const_lv1_0) & ~((tmp_5_reg_500 == ap_const_lv1_0) & (tmp_s_reg_535 == ap_const_lv1_0) & (ap_const_logic_0 == grp_intersect_fix64_sqrt_fu_173_ap_done)))) begin
        t0_ap_vld = ap_const_logic_1;
    end else begin
        t0_ap_vld = ap_const_logic_0;
    end
end

always @ (tmp_5_reg_500 or tmp_s_reg_535 or grp_intersect_fix64_sqrt_fu_173_ap_done or ap_sig_cseq_ST_st16_fsm_15) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15) & (tmp_5_reg_500 == ap_const_lv1_0) & (tmp_s_reg_535 == ap_const_lv1_0) & ~((tmp_5_reg_500 == ap_const_lv1_0) & (tmp_s_reg_535 == ap_const_lv1_0) & (ap_const_logic_0 == grp_intersect_fix64_sqrt_fu_173_ap_done)))) begin
        t1_ap_vld = ap_const_logic_1;
    end else begin
        t1_ap_vld = ap_const_logic_0;
    end
end
always @ (ap_start or ap_CS_fsm or tmp_5_fu_281_p3 or tmp_5_reg_500 or tmp_s_reg_535 or grp_intersect_fix64_sqrt_fu_173_ap_done) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : 
        begin
            if (~(tmp_5_fu_281_p3 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st16_fsm_15;
            end else begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : 
        begin
            if (~((tmp_5_reg_500 == ap_const_lv1_0) & (tmp_s_reg_535 == ap_const_lv1_0) & (ap_const_logic_0 == grp_intersect_fix64_sqrt_fu_173_ap_done))) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st16_fsm_15;
            end
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


assign ap_return = p_0_phi_fu_162_p6;


always @ (ap_CS_fsm) begin
    ap_sig_bdd_111 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_128 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_137 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_150 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_161 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_E]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_183 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_F]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_32 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_98 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

assign d2_cast_fu_357_p1 = $signed(d2_fu_351_p2);

assign d2_fu_351_p2 = ($signed(tmp_4_cast_fu_345_p1) - $signed(tmp_16_cast_fu_348_p1));

assign grp_fu_221_ce = ap_const_logic_1;

assign grp_fu_234_ce = ap_const_logic_1;

assign grp_fu_247_ce = ap_const_logic_1;

assign grp_fu_289_ce = ap_const_logic_1;

assign grp_fu_289_p0 = tmp_i_fu_253_p1;

assign grp_fu_289_p1 = tmp_i_fu_253_p1;

assign grp_fu_295_ce = ap_const_logic_1;

assign grp_fu_295_p0 = tmp_24_i_fu_256_p1;

assign grp_fu_295_p1 = tmp_24_i_fu_256_p1;

assign grp_fu_301_ce = ap_const_logic_1;

assign grp_fu_301_p0 = tmp_27_i_fu_259_p1;

assign grp_fu_301_p1 = tmp_27_i_fu_259_p1;

assign grp_fu_310_ce = ap_const_logic_1;

assign grp_fu_310_p0 = tmp_5_cast_fu_307_p1;

assign grp_fu_310_p1 = tmp_5_cast_fu_307_p1;

assign grp_intersect_fix64_sqrt_fu_173_ap_start = grp_intersect_fix64_sqrt_fu_173_ap_start_ap_start_reg;

assign grp_intersect_fix64_sqrt_fu_173_num = tmp_8_reg_539;

assign t0 = (tca_reg_493 - thc_fu_390_p2);

assign t1 = (thc_fu_390_p2 + tca_reg_493);

assign thc_fu_390_p2 = grp_intersect_fix64_sqrt_fu_173_ap_return << ap_const_lv32_8;

assign tmp1_fu_316_p2 = (tmp_23_i1_reg_510 + tmp_29_i1_reg_520);

assign tmp_16_cast_fu_348_p1 = tmp_7_reg_530;

assign tmp_24_i_fu_256_p1 = v_y_2_reg_418;

assign tmp_27_i_fu_259_p1 = v_z_2_reg_424;

assign tmp_31_i1_fu_320_p2 = (tmp1_fu_316_p2 + tmp_26_i1_reg_515);

assign tmp_31_i_fu_266_p2 = (tmp_26_i_reg_465 + tmp_fu_262_p2);

assign tmp_4_cast_fu_345_p1 = $signed(tmp_3_reg_525);

assign tmp_5_cast_fu_307_p1 = tca_reg_493;

assign tmp_5_fu_281_p3 = tmp_31_i_fu_266_p2[ap_const_lv32_2F];

assign tmp_8_fu_383_p2 = ($signed(tmp_9_cast2_fu_369_p1) - $signed(d2_cast_fu_357_p1));

assign tmp_9_cast2_fu_369_p1 = $signed(tmp_9_fu_361_p3);

assign tmp_9_cast_fu_373_p1 = $signed(tmp_9_fu_361_p3);

assign tmp_9_fu_361_p3 = {{sphere_radius2}, {ap_const_lv16_0}};

assign tmp_fu_262_p2 = (tmp_29_i_reg_470 + tmp_23_i_reg_460);

assign tmp_i_fu_253_p1 = v_x_2_reg_412;

assign tmp_s_fu_377_p2 = ($signed(d2_fu_351_p2) > $signed(tmp_9_cast_fu_373_p1)? 1'b1: 1'b0);

assign v_x_2_fu_196_p2 = (v_x_fu_178_p2 - rayorig_x);

assign v_x_fu_178_p2 = sphere_center_x << ap_const_lv32_10;

assign v_y_2_fu_202_p2 = (v_y_fu_184_p2 - rayorig_y);

assign v_y_fu_184_p2 = sphere_center_y << ap_const_lv32_10;

assign v_z_2_fu_208_p2 = (v_z_fu_190_p2 - rayorig_z);

assign v_z_fu_190_p2 = sphere_center_z << ap_const_lv32_10;


endmodule //intersect

