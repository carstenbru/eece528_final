// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 


module intersect (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        sphere_center_x,
        sphere_center_y,
        sphere_center_z,
        sphere_radius,
        sphere_radius2,
        sphere_surfaceColor_r,
        sphere_surfaceColor_g,
        sphere_surfaceColor_b,
        sphere_emissionColor_r,
        sphere_emissionColor_g,
        sphere_emissionColor_b,
        sphere_reflection,
        rayorig_x,
        rayorig_y,
        rayorig_z,
        raydir_x,
        raydir_y,
        raydir_z,
        t0,
        t0_ap_vld,
        t1,
        t1_ap_vld,
        square_root,
        ap_return
);

parameter    ap_const_logic_1 = 1'b1;
parameter    ap_const_logic_0 = 1'b0;
parameter    ap_ST_st1_fsm_0 = 16'b1;
parameter    ap_ST_st2_fsm_1 = 16'b10;
parameter    ap_ST_st3_fsm_2 = 16'b100;
parameter    ap_ST_st4_fsm_3 = 16'b1000;
parameter    ap_ST_st5_fsm_4 = 16'b10000;
parameter    ap_ST_st6_fsm_5 = 16'b100000;
parameter    ap_ST_st7_fsm_6 = 16'b1000000;
parameter    ap_ST_st8_fsm_7 = 16'b10000000;
parameter    ap_ST_st9_fsm_8 = 16'b100000000;
parameter    ap_ST_st10_fsm_9 = 16'b1000000000;
parameter    ap_ST_st11_fsm_10 = 16'b10000000000;
parameter    ap_ST_st12_fsm_11 = 16'b100000000000;
parameter    ap_ST_st13_fsm_12 = 16'b1000000000000;
parameter    ap_ST_st14_fsm_13 = 16'b10000000000000;
parameter    ap_ST_st15_fsm_14 = 16'b100000000000000;
parameter    ap_ST_st16_fsm_15 = 16'b1000000000000000;
parameter    ap_const_lv32_0 = 32'b00000000000000000000000000000000;
parameter    ap_const_lv1_1 = 1'b1;
parameter    ap_const_lv32_6 = 32'b110;
parameter    ap_const_lv32_7 = 32'b111;
parameter    ap_const_lv32_8 = 32'b1000;
parameter    ap_const_lv32_C = 32'b1100;
parameter    ap_const_lv32_D = 32'b1101;
parameter    ap_const_lv32_E = 32'b1110;
parameter    ap_const_lv1_0 = 1'b0;
parameter    ap_const_lv32_F = 32'b1111;
parameter    ap_const_lv32_10 = 32'b10000;
parameter    ap_const_lv32_1F = 32'b11111;
parameter    ap_const_lv32_1D = 32'b11101;
parameter    ap_true = 1'b1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] sphere_center_x;
input  [31:0] sphere_center_y;
input  [31:0] sphere_center_z;
input  [31:0] sphere_radius;
input  [31:0] sphere_radius2;
input  [31:0] sphere_surfaceColor_r;
input  [31:0] sphere_surfaceColor_g;
input  [31:0] sphere_surfaceColor_b;
input  [31:0] sphere_emissionColor_r;
input  [31:0] sphere_emissionColor_g;
input  [31:0] sphere_emissionColor_b;
input  [31:0] sphere_reflection;
input  [31:0] rayorig_x;
input  [31:0] rayorig_y;
input  [31:0] rayorig_z;
input  [31:0] raydir_x;
input  [31:0] raydir_y;
input  [31:0] raydir_z;
output  [31:0] t0;
output   t0_ap_vld;
output  [31:0] t1;
output   t1_ap_vld;
input  [31:0] square_root;
output  [7:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg t0_ap_vld;
reg t1_ap_vld;
(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm = 16'b1;
reg    ap_sig_cseq_ST_st1_fsm_0;
reg    ap_sig_bdd_32;
wire  signed [31:0] v_x_2_fu_186_p2;
reg  signed [31:0] v_x_2_reg_351;
wire  signed [31:0] v_y_2_fu_192_p2;
reg  signed [31:0] v_y_2_reg_358;
wire  signed [31:0] v_z_2_fu_198_p2;
reg  signed [31:0] v_z_2_reg_365;
wire   [31:0] grp_fu_204_p2;
reg   [31:0] tmp_i_reg_387;
reg    ap_sig_cseq_ST_st7_fsm_6;
reg    ap_sig_bdd_92;
wire   [31:0] grp_fu_209_p2;
reg   [31:0] tmp_i_8_reg_392;
wire   [31:0] grp_fu_214_p2;
reg   [31:0] tmp_9_i_reg_397;
wire   [15:0] tmp_3_fu_228_p4;
reg   [15:0] tmp_3_reg_402;
reg    ap_sig_cseq_ST_st8_fsm_7;
reg    ap_sig_bdd_105;
wire  signed [31:0] tca_fu_238_p1;
reg  signed [31:0] tca_reg_407;
wire   [0:0] tmp_6_fu_242_p3;
reg   [0:0] tmp_6_reg_413;
reg   [13:0] tmp_2_reg_417;
reg    ap_sig_cseq_ST_st9_fsm_8;
reg    ap_sig_bdd_118;
wire   [31:0] grp_fu_250_p2;
reg   [31:0] tmp_i1_reg_422;
reg    ap_sig_cseq_ST_st13_fsm_12;
reg    ap_sig_bdd_127;
wire   [31:0] grp_fu_254_p2;
reg   [31:0] tmp_i1_9_reg_427;
wire   [31:0] grp_fu_258_p2;
reg   [31:0] tmp_9_i1_reg_432;
wire   [16:0] d2_fu_300_p2;
reg   [16:0] d2_reg_437;
reg    ap_sig_cseq_ST_st14_fsm_13;
reg    ap_sig_bdd_140;
wire   [0:0] tmp_7_fu_315_p2;
reg   [0:0] tmp_7_reg_442;
reg    ap_sig_cseq_ST_st15_fsm_14;
reg    ap_sig_bdd_149;
wire   [31:0] tmp_8_fu_321_p2;
reg   [31:0] tmp_8_reg_446;
wire    grp_intersect_fix64_sqrt_fu_163_ap_start;
wire    grp_intersect_fix64_sqrt_fu_163_ap_done;
wire    grp_intersect_fix64_sqrt_fu_163_ap_idle;
wire    grp_intersect_fix64_sqrt_fu_163_ap_ready;
wire   [31:0] grp_intersect_fix64_sqrt_fu_163_num;
wire   [31:0] grp_intersect_fix64_sqrt_fu_163_ap_return;
reg   [0:0] p_0_phi_fu_152_p6;
reg   [0:0] p_0_reg_148;
reg    ap_sig_cseq_ST_st16_fsm_15;
reg    ap_sig_bdd_171;
reg    grp_intersect_fix64_sqrt_fu_163_ap_start_ap_start_reg = 1'b0;
wire   [31:0] v_x_fu_168_p2;
wire   [31:0] v_y_fu_174_p2;
wire   [31:0] v_z_fu_180_p2;
wire   [31:0] tmp_fu_219_p2;
wire   [31:0] tmp_2_i_fu_223_p2;
wire   [29:0] tmp_4_cast_fu_344_p2;
wire   [31:0] tmp1_fu_274_p2;
wire   [31:0] tmp_2_i1_fu_278_p2;
wire   [15:0] tmp_5_fu_283_p4;
wire  signed [16:0] tmp_3_cast_fu_293_p1;
wire   [16:0] tmp_5_cast_fu_297_p1;
wire  signed [31:0] d2_cast_fu_306_p1;
wire   [31:0] tmp_10_fu_309_p2;
wire   [15:0] tmp_4_cast_fu_344_p0;
wire   [29:0] tmp_1_fu_262_p1;
wire   [15:0] tmp_4_cast_fu_344_p1;
wire    grp_fu_204_ce;
wire    grp_fu_209_ce;
wire    grp_fu_214_ce;
wire    grp_fu_250_ce;
wire    grp_fu_254_ce;
wire    grp_fu_258_ce;
reg   [15:0] ap_NS_fsm;


intersect_fix64_sqrt grp_intersect_fix64_sqrt_fu_163(
    .ap_clk( ap_clk ),
    .ap_rst( ap_rst ),
    .ap_start( grp_intersect_fix64_sqrt_fu_163_ap_start ),
    .ap_done( grp_intersect_fix64_sqrt_fu_163_ap_done ),
    .ap_idle( grp_intersect_fix64_sqrt_fu_163_ap_idle ),
    .ap_ready( grp_intersect_fix64_sqrt_fu_163_ap_ready ),
    .num( grp_intersect_fix64_sqrt_fu_163_num ),
    .ap_return( grp_intersect_fix64_sqrt_fu_163_ap_return )
);

intersect_mul_32s_32s_32_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
intersect_mul_32s_32s_32_6_U1(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( raydir_x ),
    .din1( v_x_2_reg_351 ),
    .ce( grp_fu_204_ce ),
    .dout( grp_fu_204_p2 )
);

intersect_mul_32s_32s_32_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
intersect_mul_32s_32s_32_6_U2(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( raydir_y ),
    .din1( v_y_2_reg_358 ),
    .ce( grp_fu_209_ce ),
    .dout( grp_fu_209_p2 )
);

intersect_mul_32s_32s_32_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
intersect_mul_32s_32s_32_6_U3(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( raydir_z ),
    .din1( v_z_2_reg_365 ),
    .ce( grp_fu_214_ce ),
    .dout( grp_fu_214_p2 )
);

intersect_mul_32s_32s_32_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
intersect_mul_32s_32s_32_6_U4(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( v_x_2_reg_351 ),
    .din1( v_x_2_reg_351 ),
    .ce( grp_fu_250_ce ),
    .dout( grp_fu_250_p2 )
);

intersect_mul_32s_32s_32_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
intersect_mul_32s_32s_32_6_U5(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( v_y_2_reg_358 ),
    .din1( v_y_2_reg_358 ),
    .ce( grp_fu_254_ce ),
    .dout( grp_fu_254_p2 )
);

intersect_mul_32s_32s_32_6 #(
    .ID( 1 ),
    .NUM_STAGE( 6 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
intersect_mul_32s_32s_32_6_U6(
    .clk( ap_clk ),
    .reset( ap_rst ),
    .din0( v_z_2_reg_365 ),
    .din1( v_z_2_reg_365 ),
    .ce( grp_fu_258_ce ),
    .dout( grp_fu_258_p2 )
);

intersect_mul_mul_16ns_16ns_30_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 30 ))
intersect_mul_mul_16ns_16ns_30_1_U7(
    .din0( tmp_4_cast_fu_344_p0 ),
    .din1( tmp_4_cast_fu_344_p1 ),
    .dout( tmp_4_cast_fu_344_p2 )
);



always @ (posedge ap_clk) begin : ap_ret_ap_CS_fsm
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_st1_fsm_0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin : ap_ret_grp_intersect_fix64_sqrt_fu_163_ap_start_ap_start_reg
    if (ap_rst == 1'b1) begin
        grp_intersect_fix64_sqrt_fu_163_ap_start_ap_start_reg <= ap_const_logic_0;
    end else begin
        if (((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14) & (tmp_7_fu_315_p2 == ap_const_lv1_0))) begin
            grp_intersect_fix64_sqrt_fu_163_ap_start_ap_start_reg <= ap_const_logic_1;
        end else if ((ap_const_logic_1 == grp_intersect_fix64_sqrt_fu_163_ap_ready)) begin
            grp_intersect_fix64_sqrt_fu_163_ap_start_ap_start_reg <= ap_const_logic_0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7) & ~(tmp_6_fu_242_p3 == ap_const_lv1_0)) | ((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14) & ~(tmp_7_fu_315_p2 == ap_const_lv1_0)))) begin
        p_0_reg_148 <= ap_const_lv1_0;
    end else if (((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15) & (tmp_6_reg_413 == ap_const_lv1_0) & (tmp_7_reg_442 == ap_const_lv1_0) & ~((tmp_6_reg_413 == ap_const_lv1_0) & (tmp_7_reg_442 == ap_const_lv1_0) & (ap_const_logic_0 == grp_intersect_fix64_sqrt_fu_163_ap_done)))) begin
        p_0_reg_148 <= ap_const_lv1_1;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st14_fsm_13)) begin
        d2_reg_437 <= d2_fu_300_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st8_fsm_7)) begin
        tca_reg_407 <= tca_fu_238_p1;
        tmp_3_reg_402 <= {{tmp_2_i_fu_223_p2[ap_const_lv32_1F : ap_const_lv32_10]}};
        tmp_6_reg_413 <= tmp_2_i_fu_223_p2[ap_const_lv32_1F];
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st9_fsm_8)) begin
        tmp_2_reg_417 <= {{tmp_4_cast_fu_344_p2[ap_const_lv32_1D : ap_const_lv32_10]}};
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14)) begin
        tmp_7_reg_442 <= tmp_7_fu_315_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st15_fsm_14) & (tmp_7_fu_315_p2 == ap_const_lv1_0))) begin
        tmp_8_reg_446 <= tmp_8_fu_321_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st13_fsm_12)) begin
        tmp_9_i1_reg_432 <= grp_fu_258_p2;
        tmp_i1_9_reg_427 <= grp_fu_254_p2;
        tmp_i1_reg_422 <= grp_fu_250_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((ap_const_logic_1 == ap_sig_cseq_ST_st7_fsm_6)) begin
        tmp_9_i_reg_397 <= grp_fu_214_p2;
        tmp_i_8_reg_392 <= grp_fu_209_p2;
        tmp_i_reg_387 <= grp_fu_204_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0) & ~(ap_start == ap_const_logic_0))) begin
        v_x_2_reg_351 <= v_x_2_fu_186_p2;
        v_y_2_reg_358 <= v_y_2_fu_192_p2;
        v_z_2_reg_365 <= v_z_2_fu_198_p2;
    end
end

always @ (tmp_6_reg_413 or tmp_7_reg_442 or grp_intersect_fix64_sqrt_fu_163_ap_done or ap_sig_cseq_ST_st16_fsm_15) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15) & ~((tmp_6_reg_413 == ap_const_lv1_0) & (tmp_7_reg_442 == ap_const_lv1_0) & (ap_const_logic_0 == grp_intersect_fix64_sqrt_fu_163_ap_done)))) begin
        ap_done = ap_const_logic_1;
    end else begin
        ap_done = ap_const_logic_0;
    end
end

always @ (ap_start or ap_sig_cseq_ST_st1_fsm_0) begin
    if ((~(ap_const_logic_1 == ap_start) & (ap_const_logic_1 == ap_sig_cseq_ST_st1_fsm_0))) begin
        ap_idle = ap_const_logic_1;
    end else begin
        ap_idle = ap_const_logic_0;
    end
end

always @ (tmp_6_reg_413 or tmp_7_reg_442 or grp_intersect_fix64_sqrt_fu_163_ap_done or ap_sig_cseq_ST_st16_fsm_15) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15) & ~((tmp_6_reg_413 == ap_const_lv1_0) & (tmp_7_reg_442 == ap_const_lv1_0) & (ap_const_logic_0 == grp_intersect_fix64_sqrt_fu_163_ap_done)))) begin
        ap_ready = ap_const_logic_1;
    end else begin
        ap_ready = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_127) begin
    if (ap_sig_bdd_127) begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st13_fsm_12 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_140) begin
    if (ap_sig_bdd_140) begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st14_fsm_13 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_149) begin
    if (ap_sig_bdd_149) begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st15_fsm_14 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_171) begin
    if (ap_sig_bdd_171) begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st16_fsm_15 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_32) begin
    if (ap_sig_bdd_32) begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st1_fsm_0 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_92) begin
    if (ap_sig_bdd_92) begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st7_fsm_6 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_105) begin
    if (ap_sig_bdd_105) begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st8_fsm_7 = ap_const_logic_0;
    end
end

always @ (ap_sig_bdd_118) begin
    if (ap_sig_bdd_118) begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_1;
    end else begin
        ap_sig_cseq_ST_st9_fsm_8 = ap_const_logic_0;
    end
end

always @ (tmp_6_reg_413 or tmp_7_reg_442 or p_0_reg_148 or ap_sig_cseq_ST_st16_fsm_15) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15) & (tmp_6_reg_413 == ap_const_lv1_0) & (tmp_7_reg_442 == ap_const_lv1_0))) begin
        p_0_phi_fu_152_p6 = ap_const_lv1_1;
    end else begin
        p_0_phi_fu_152_p6 = p_0_reg_148;
    end
end

always @ (tmp_6_reg_413 or tmp_7_reg_442 or grp_intersect_fix64_sqrt_fu_163_ap_done or ap_sig_cseq_ST_st16_fsm_15) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15) & (tmp_6_reg_413 == ap_const_lv1_0) & (tmp_7_reg_442 == ap_const_lv1_0) & ~((tmp_6_reg_413 == ap_const_lv1_0) & (tmp_7_reg_442 == ap_const_lv1_0) & (ap_const_logic_0 == grp_intersect_fix64_sqrt_fu_163_ap_done)))) begin
        t0_ap_vld = ap_const_logic_1;
    end else begin
        t0_ap_vld = ap_const_logic_0;
    end
end

always @ (tmp_6_reg_413 or tmp_7_reg_442 or grp_intersect_fix64_sqrt_fu_163_ap_done or ap_sig_cseq_ST_st16_fsm_15) begin
    if (((ap_const_logic_1 == ap_sig_cseq_ST_st16_fsm_15) & (tmp_6_reg_413 == ap_const_lv1_0) & (tmp_7_reg_442 == ap_const_lv1_0) & ~((tmp_6_reg_413 == ap_const_lv1_0) & (tmp_7_reg_442 == ap_const_lv1_0) & (ap_const_logic_0 == grp_intersect_fix64_sqrt_fu_163_ap_done)))) begin
        t1_ap_vld = ap_const_logic_1;
    end else begin
        t1_ap_vld = ap_const_logic_0;
    end
end
always @ (ap_start or ap_CS_fsm or tmp_6_fu_242_p3 or tmp_6_reg_413 or tmp_7_reg_442 or grp_intersect_fix64_sqrt_fu_163_ap_done) begin
    case (ap_CS_fsm)
        ap_ST_st1_fsm_0 : 
        begin
            if (~(ap_start == ap_const_logic_0)) begin
                ap_NS_fsm = ap_ST_st2_fsm_1;
            end else begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end
        end
        ap_ST_st2_fsm_1 : 
        begin
            ap_NS_fsm = ap_ST_st3_fsm_2;
        end
        ap_ST_st3_fsm_2 : 
        begin
            ap_NS_fsm = ap_ST_st4_fsm_3;
        end
        ap_ST_st4_fsm_3 : 
        begin
            ap_NS_fsm = ap_ST_st5_fsm_4;
        end
        ap_ST_st5_fsm_4 : 
        begin
            ap_NS_fsm = ap_ST_st6_fsm_5;
        end
        ap_ST_st6_fsm_5 : 
        begin
            ap_NS_fsm = ap_ST_st7_fsm_6;
        end
        ap_ST_st7_fsm_6 : 
        begin
            ap_NS_fsm = ap_ST_st8_fsm_7;
        end
        ap_ST_st8_fsm_7 : 
        begin
            if (~(tmp_6_fu_242_p3 == ap_const_lv1_0)) begin
                ap_NS_fsm = ap_ST_st16_fsm_15;
            end else begin
                ap_NS_fsm = ap_ST_st9_fsm_8;
            end
        end
        ap_ST_st9_fsm_8 : 
        begin
            ap_NS_fsm = ap_ST_st10_fsm_9;
        end
        ap_ST_st10_fsm_9 : 
        begin
            ap_NS_fsm = ap_ST_st11_fsm_10;
        end
        ap_ST_st11_fsm_10 : 
        begin
            ap_NS_fsm = ap_ST_st12_fsm_11;
        end
        ap_ST_st12_fsm_11 : 
        begin
            ap_NS_fsm = ap_ST_st13_fsm_12;
        end
        ap_ST_st13_fsm_12 : 
        begin
            ap_NS_fsm = ap_ST_st14_fsm_13;
        end
        ap_ST_st14_fsm_13 : 
        begin
            ap_NS_fsm = ap_ST_st15_fsm_14;
        end
        ap_ST_st15_fsm_14 : 
        begin
            ap_NS_fsm = ap_ST_st16_fsm_15;
        end
        ap_ST_st16_fsm_15 : 
        begin
            if (~((tmp_6_reg_413 == ap_const_lv1_0) & (tmp_7_reg_442 == ap_const_lv1_0) & (ap_const_logic_0 == grp_intersect_fix64_sqrt_fu_163_ap_done))) begin
                ap_NS_fsm = ap_ST_st1_fsm_0;
            end else begin
                ap_NS_fsm = ap_ST_st16_fsm_15;
            end
        end
        default : 
        begin
            ap_NS_fsm = 'bx;
        end
    endcase
end


assign ap_return = p_0_phi_fu_152_p6;


always @ (ap_CS_fsm) begin
    ap_sig_bdd_105 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_7]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_118 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_8]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_127 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_C]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_140 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_D]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_149 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_E]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_171 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_F]);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_32 = (ap_CS_fsm[ap_const_lv32_0] == ap_const_lv1_1);
end


always @ (ap_CS_fsm) begin
    ap_sig_bdd_92 = (ap_const_lv1_1 == ap_CS_fsm[ap_const_lv32_6]);
end

assign d2_cast_fu_306_p1 = $signed(d2_reg_437);

assign d2_fu_300_p2 = ($signed(tmp_3_cast_fu_293_p1) - $signed(tmp_5_cast_fu_297_p1));

assign grp_fu_204_ce = ap_const_logic_1;

assign grp_fu_209_ce = ap_const_logic_1;

assign grp_fu_214_ce = ap_const_logic_1;

assign grp_fu_250_ce = ap_const_logic_1;

assign grp_fu_254_ce = ap_const_logic_1;

assign grp_fu_258_ce = ap_const_logic_1;

assign grp_intersect_fix64_sqrt_fu_163_ap_start = grp_intersect_fix64_sqrt_fu_163_ap_start_ap_start_reg;

assign grp_intersect_fix64_sqrt_fu_163_num = tmp_8_reg_446;

assign t0 = ($signed(tca_reg_407) - $signed(grp_intersect_fix64_sqrt_fu_163_ap_return));

assign t1 = ($signed(grp_intersect_fix64_sqrt_fu_163_ap_return) + $signed(tca_reg_407));

assign tca_fu_238_p1 = $signed(tmp_3_fu_228_p4);

assign tmp1_fu_274_p2 = (tmp_i1_reg_422 + tmp_9_i1_reg_432);

assign tmp_10_fu_309_p2 = sphere_radius2 << ap_const_lv32_10;

assign tmp_1_fu_262_p1 = tmp_3_reg_402;

assign tmp_2_i1_fu_278_p2 = (tmp1_fu_274_p2 + tmp_i1_9_reg_427);

assign tmp_2_i_fu_223_p2 = (tmp_i_8_reg_392 + tmp_fu_219_p2);

assign tmp_3_cast_fu_293_p1 = $signed(tmp_5_fu_283_p4);

assign tmp_3_fu_228_p4 = {{tmp_2_i_fu_223_p2[ap_const_lv32_1F : ap_const_lv32_10]}};

assign tmp_4_cast_fu_344_p0 = tmp_1_fu_262_p1;

assign tmp_4_cast_fu_344_p1 = tmp_1_fu_262_p1;

assign tmp_5_cast_fu_297_p1 = tmp_2_reg_417;

assign tmp_5_fu_283_p4 = {{tmp_2_i1_fu_278_p2[ap_const_lv32_1F : ap_const_lv32_10]}};

assign tmp_6_fu_242_p3 = tmp_2_i_fu_223_p2[ap_const_lv32_1F];

assign tmp_7_fu_315_p2 = ($signed(d2_cast_fu_306_p1) > $signed(tmp_10_fu_309_p2)? 1'b1: 1'b0);

assign tmp_8_fu_321_p2 = ($signed(tmp_10_fu_309_p2) - $signed(d2_cast_fu_306_p1));

assign tmp_fu_219_p2 = (tmp_9_i_reg_397 + tmp_i_reg_387);

assign v_x_2_fu_186_p2 = (v_x_fu_168_p2 - rayorig_x);

assign v_x_fu_168_p2 = sphere_center_x << ap_const_lv32_10;

assign v_y_2_fu_192_p2 = (v_y_fu_174_p2 - rayorig_y);

assign v_y_fu_174_p2 = sphere_center_y << ap_const_lv32_10;

assign v_z_2_fu_198_p2 = (v_z_fu_180_p2 - rayorig_z);

assign v_z_fu_180_p2 = sphere_center_z << ap_const_lv32_10;


endmodule //intersect

