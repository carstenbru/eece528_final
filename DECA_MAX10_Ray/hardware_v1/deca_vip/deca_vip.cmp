	component deca_vip is
		port (
			altpll_mipi_clk_clk                           : out   std_logic;                                        -- clk
			altpll_sys_hdmi_clk                           : out   std_logic;                                        -- clk
			clk_clk                                       : in    std_logic                     := 'X';             -- clk
			clock_bridge_vip_out_clk_clk                  : out   std_logic;                                        -- clk
			ddr3_status_external_connection_export        : in    std_logic_vector(3 downto 0)  := (others => 'X'); -- export
			hdmi_cvo_vid_clk                              : in    std_logic                     := 'X';             -- vid_clk
			hdmi_cvo_vid_data                             : out   std_logic_vector(23 downto 0);                    -- vid_data
			hdmi_cvo_underflow                            : out   std_logic;                                        -- underflow
			hdmi_cvo_vid_datavalid                        : out   std_logic;                                        -- vid_datavalid
			hdmi_cvo_vid_v_sync                           : out   std_logic;                                        -- vid_v_sync
			hdmi_cvo_vid_h_sync                           : out   std_logic;                                        -- vid_h_sync
			hdmi_cvo_vid_f                                : out   std_logic;                                        -- vid_f
			hdmi_cvo_vid_h                                : out   std_logic;                                        -- vid_h
			hdmi_cvo_vid_v                                : out   std_logic;                                        -- vid_v
			led_external_connection_export                : out   std_logic_vector(7 downto 0);                     -- export
			mem_if_ddr3_emif_pll_ref_clk_clk              : in    std_logic                     := 'X';             -- clk
			mem_if_ddr3_emif_pll_sharing_pll_mem_clk      : out   std_logic;                                        -- pll_mem_clk
			mem_if_ddr3_emif_pll_sharing_pll_write_clk    : out   std_logic;                                        -- pll_write_clk
			mem_if_ddr3_emif_pll_sharing_pll_locked       : out   std_logic;                                        -- pll_locked
			mem_if_ddr3_emif_pll_sharing_pll_capture0_clk : out   std_logic;                                        -- pll_capture0_clk
			mem_if_ddr3_emif_pll_sharing_pll_capture1_clk : out   std_logic;                                        -- pll_capture1_clk
			mem_if_ddr3_emif_status_local_init_done       : out   std_logic;                                        -- local_init_done
			mem_if_ddr3_emif_status_local_cal_success     : out   std_logic;                                        -- local_cal_success
			mem_if_ddr3_emif_status_local_cal_fail        : out   std_logic;                                        -- local_cal_fail
			memory_mem_a                                  : out   std_logic_vector(14 downto 0);                    -- mem_a
			memory_mem_ba                                 : out   std_logic_vector(2 downto 0);                     -- mem_ba
			memory_mem_ck                                 : inout std_logic_vector(0 downto 0)  := (others => 'X'); -- mem_ck
			memory_mem_ck_n                               : inout std_logic_vector(0 downto 0)  := (others => 'X'); -- mem_ck_n
			memory_mem_cke                                : out   std_logic_vector(0 downto 0);                     -- mem_cke
			memory_mem_cs_n                               : out   std_logic_vector(0 downto 0);                     -- mem_cs_n
			memory_mem_dm                                 : out   std_logic_vector(1 downto 0);                     -- mem_dm
			memory_mem_ras_n                              : out   std_logic_vector(0 downto 0);                     -- mem_ras_n
			memory_mem_cas_n                              : out   std_logic_vector(0 downto 0);                     -- mem_cas_n
			memory_mem_we_n                               : out   std_logic_vector(0 downto 0);                     -- mem_we_n
			memory_mem_reset_n                            : out   std_logic;                                        -- mem_reset_n
			memory_mem_dq                                 : inout std_logic_vector(15 downto 0) := (others => 'X'); -- mem_dq
			memory_mem_dqs                                : inout std_logic_vector(1 downto 0)  := (others => 'X'); -- mem_dqs
			memory_mem_dqs_n                              : inout std_logic_vector(1 downto 0)  := (others => 'X'); -- mem_dqs_n
			memory_mem_odt                                : out   std_logic_vector(0 downto 0);                     -- mem_odt
			reset_reset_n                                 : in    std_logic                     := 'X';             -- reset_n
			sw_external_connection_export                 : in    std_logic_vector(1 downto 0)  := (others => 'X')  -- export
		);
	end component deca_vip;

