// Copyright (C) 1991-2015 Altera Corporation. All rights reserved.
// Your use of Altera Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Altera Program License 
// Subscription Agreement, the Altera Quartus II License Agreement,
// the Altera MegaCore Function License Agreement, or other 
// applicable license agreement, including, without limitation, 
// that your use is for the sole purpose of programming logic 
// devices manufactured by Altera and sold by Altera or its 
// authorized distributors.  Please refer to the applicable 
// agreement for further details.


// Generated by Quartus II 64-Bit Version 15.0 (Build Build 145 04/22/2015)
// Created on Sun Dec 13 02:09:44 2015

intersect_sphere intersect_sphere_inst
(
	.clk(clk_sig) ,	// input  clk_sig
	.start(start_sig) ,	// input  start_sig
	.finish(finish_sig) ,	// output  finish_sig
	.radius_sqr(radius_sqr_sig) ,	// input [31:0] radius_sqr_sig
	.centerx(centerx_sig) ,	// input [31:0] centerx_sig
	.centery(centery_sig) ,	// input [31:0] centery_sig
	.centerz(centerz_sig) ,	// input [31:0] centerz_sig
	.rayorig_x(rayorig_x_sig) ,	// input [31:0] rayorig_x_sig
	.rayorig_y(rayorig_y_sig) ,	// input [31:0] rayorig_y_sig
	.rayorig_z(rayorig_z_sig) ,	// input [31:0] rayorig_z_sig
	.raydir_x(raydir_x_sig) ,	// input [31:0] raydir_x_sig
	.raydir_y(raydir_y_sig) ,	// input [31:0] raydir_y_sig
	.raydir_z(raydir_z_sig) ,	// input [31:0] raydir_z_sig
	.t0(t0_sig) ,	// output [31:0] t0_sig
	.t1(t1_sig) ,	// output [31:0] t1_sig
	.result(result_sig) 	// output  result_sig
);

